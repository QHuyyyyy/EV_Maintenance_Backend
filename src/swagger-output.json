{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "EV Maintenance Backend API",
    "description": "Auto-generated API documentation for EV Maintenance System",
    "contact": {
      "name": "API Support",
      "email": "support@evmaintenance.com"
    }
  },
  "servers": [
    {
      "url": "http://localhost:5000/"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authentication and authorization endpoints"
    },
    {
      "name": "Users",
      "description": "User management and authentication endpoints"
    },
    {
      "name": "Customers",
      "description": "Customer management endpoints"
    },
    {
      "name": "System Users",
      "description": "System user management endpoints"
    },
    {
      "name": "Vehicles",
      "description": "Vehicle management endpoints"
    },
    {
      "name": "Service Packages",
      "description": "Service package management endpoints"
    },
    {
      "name": "Vehicle Subscriptions",
      "description": "Vehicle subscription management endpoints"
    }
  ],
  "paths": {
    "/api/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login with email and password",
        "description": "",
        "responses": {
          "200": {
            "description": "User logged in successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Login successfully"
                    },
                    "token": {
                      "type": "string",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Login successfully"
                    },
                    "token": {
                      "type": "string",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid email or password",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            }
          }
        }
      }
    },
    "/api/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register a new user",
        "description": "",
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "User registered successfully"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "User registered successfully"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid email or password",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Register"
              }
            }
          }
        }
      }
    },
    "/api/auth/refresh-token": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Refresh access token using refresh token",
        "description": "",
        "responses": {
          "200": {
            "description": "Token refreshed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Token refreshed successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                        },
                        "refreshToken": {
                          "type": "string",
                          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                        },
                        "expiresIn": {
                          "type": "number",
                          "example": 3600
                        }
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Token refreshed successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                        },
                        "refreshToken": {
                          "type": "string",
                          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                        },
                        "expiresIn": {
                          "type": "number",
                          "example": 3600
                        }
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Refresh token is required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid refresh token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "refreshToken": {
                    "type": "string",
                    "description": "Valid refresh token"
                  }
                },
                "required": [
                  "refreshToken"
                ]
              }
            }
          }
        }
      }
    },
    "/api/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Logout user and invalidate tokens",
        "description": "",
        "responses": {
          "200": {
            "description": "Logout successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Logout successful"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Logout successful"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "401": {
            "description": "No token provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "refreshToken": {
                    "type": "string",
                    "description": "Refresh token to invalidate (optional)"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/profile": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Get Profile",
        "description": "",
        "responses": {
          "200": {
            "description": "Get profile successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Get profile successfully"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Get profile successfully"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "No token provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get all users with filtering and pagination",
        "description": "",
        "parameters": [
          {
            "name": "role",
            "in": "query",
            "enum": [
              "admin",
              "mechanic",
              "customer"
            ],
            "description": "Filter by user role",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "enum": [
              "active",
              "inactive",
              "suspended"
            ],
            "description": "Filter by user status",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number (default: 1)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Items per page (default: 10)",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Users retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersListResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UsersListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user by ID",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "User retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "User retrieved successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/User"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "User retrieved successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/User"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Update user by ID",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User ID"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UserUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "User updated successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/User"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "User updated successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/User"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete user by ID",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "User deleted successfully"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "User deleted successfully"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/customers": {
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "Get all customers with filtering and pagination",
        "description": "Retrieve all customers with optional filtering and pagination",
        "parameters": [
          {
            "name": "customerName",
            "in": "query",
            "description": "Filter by customer name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "phone",
            "in": "query",
            "description": "Filter by phone number",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address",
            "in": "query",
            "description": "Filter by address",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number (default: 1)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Items per page (default: 10)",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Customers retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "array"
                        },
                        "items": {
                          "$ref": "#/components/schemas/Customer"
                        }
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "array"
                        },
                        "items": {
                          "$ref": "#/components/schemas/Customer"
                        }
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/customers/user/{userId}": {
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "Get customer by user ID",
        "description": "Retrieve customer information by their user ID",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Customer retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/Customer"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/Customer"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Customer not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/customers/{id}": {
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "Get customer by ID",
        "description": "Retrieve a specific customer by their ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Customer ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Customer retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/Customer"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/Customer"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Customer not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Customers"
        ],
        "summary": "Update customer by ID",
        "description": "Update customer information",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Customer ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Customer updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Customer updated successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Customer"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Customer updated successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Customer"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Customer not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCustomer"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Customers"
        ],
        "summary": "Delete customer by ID",
        "description": "Delete a customer (soft delete)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Customer ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Customer deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Customer deleted successfully"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Customer deleted successfully"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Customer not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/system-users": {
      "get": {
        "tags": [
          "System Users"
        ],
        "summary": "Get all system users with filtering and pagination",
        "description": "Retrieve all system users with optional filtering and pagination",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Filter by name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "phone",
            "in": "query",
            "description": "Filter by phone number",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "certification",
            "in": "query",
            "description": "Filter by certification",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number (default: 1)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Items per page (default: 10)",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "System users retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "array"
                        },
                        "items": {
                          "$ref": "#/components/schemas/SystemUser"
                        }
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "array"
                        },
                        "items": {
                          "$ref": "#/components/schemas/SystemUser"
                        }
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/system-users/user/{userId}": {
      "get": {
        "tags": [
          "System Users"
        ],
        "summary": "Get system user by user ID",
        "description": "Retrieve system user information by their user ID",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "System user retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/SystemUser"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/SystemUser"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "System user not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/system-users/{id}": {
      "get": {
        "tags": [
          "System Users"
        ],
        "summary": "Get system user by ID",
        "description": "Retrieve a specific system user by their ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "System User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "System user retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/SystemUser"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/SystemUser"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "System user not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "System Users"
        ],
        "summary": "Update system user by ID",
        "description": "Update system user information",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "System User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "System user updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "System user updated successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/SystemUser"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "System user updated successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/SystemUser"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "System user not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystemUser"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "System Users"
        ],
        "summary": "Delete system user by ID",
        "description": "Delete a system user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "System User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "System user deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "System user deleted successfully"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "System user deleted successfully"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "System user not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/vehicles": {
      "get": {
        "tags": [
          "Vehicles"
        ],
        "summary": "Get all vehicles",
        "description": "API to get all electric vehicles in the system",
        "responses": {
          "200": {
            "description": "Successfully retrieved vehicles list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Vehicles"
        ],
        "summary": "Create new vehicle",
        "description": "API to create a new electric vehicle",
        "responses": {
          "201": {
            "description": "Vehicle created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Vehicle created successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "example": "string"
                        },
                        "vehicleName": {
                          "type": "string",
                          "example": "Tesla Model 3"
                        },
                        "model": {
                          "type": "string",
                          "example": "Model 3"
                        },
                        "VIN": {
                          "type": "string",
                          "example": "1HGBH41JXMN109186"
                        },
                        "price": {
                          "type": "number",
                          "example": 50000
                        },
                        "image": {
                          "type": "string",
                          "example": "https://storage.googleapis.com/..."
                        },
                        "customerId": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Vehicle created successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "example": "string"
                        },
                        "vehicleName": {
                          "type": "string",
                          "example": "Tesla Model 3"
                        },
                        "model": {
                          "type": "string",
                          "example": "Model 3"
                        },
                        "VIN": {
                          "type": "string",
                          "example": "1HGBH41JXMN109186"
                        },
                        "price": {
                          "type": "number",
                          "example": 50000
                        },
                        "image": {
                          "type": "string",
                          "example": "https://storage.googleapis.com/..."
                        },
                        "customerId": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "vehicleName",
                  "customerId"
                ],
                "properties": {
                  "vehicleName": {
                    "type": "string",
                    "example": "Tesla Model 3"
                  },
                  "model": {
                    "type": "string",
                    "example": "Model 3"
                  },
                  "VIN": {
                    "type": "string",
                    "example": "1HGBH41JXMN109186"
                  },
                  "price": {
                    "type": "number",
                    "example": 50000
                  },
                  "customerId": {
                    "type": "string",
                    "example": "60f1b2b3c4e5f6g7h8i9j0k1"
                  },
                  "image": {
                    "type": "string",
                    "format": "binary",
                    "description": "Vehicle image"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/vehicles/{id}": {
      "get": {
        "tags": [
          "Vehicles"
        ],
        "summary": "Get vehicle by ID",
        "description": "API to get a specific vehicle by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Vehicle ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved vehicle",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "example": "string"
                        },
                        "vehicleName": {
                          "type": "string",
                          "example": "Tesla Model 3"
                        },
                        "model": {
                          "type": "string",
                          "example": "Model 3"
                        },
                        "VIN": {
                          "type": "string",
                          "example": "1HGBH41JXMN109186"
                        },
                        "price": {
                          "type": "number",
                          "example": 50000
                        },
                        "customerId": {
                          "type": "object",
                          "properties": {
                            "_id": {
                              "type": "string",
                              "example": "string"
                            },
                            "customerName": {
                              "type": "string",
                              "example": "John Doe"
                            },
                            "phone": {
                              "type": "string",
                              "example": "0123456789"
                            },
                            "address": {
                              "type": "string",
                              "example": "123 ABC Street, Ho Chi Minh City"
                            }
                          }
                        }
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "example": "string"
                        },
                        "vehicleName": {
                          "type": "string",
                          "example": "Tesla Model 3"
                        },
                        "model": {
                          "type": "string",
                          "example": "Model 3"
                        },
                        "VIN": {
                          "type": "string",
                          "example": "1HGBH41JXMN109186"
                        },
                        "price": {
                          "type": "number",
                          "example": 50000
                        },
                        "customerId": {
                          "type": "object",
                          "properties": {
                            "_id": {
                              "type": "string",
                              "example": "string"
                            },
                            "customerName": {
                              "type": "string",
                              "example": "John Doe"
                            },
                            "phone": {
                              "type": "string",
                              "example": "0123456789"
                            },
                            "address": {
                              "type": "string",
                              "example": "123 ABC Street, Ho Chi Minh City"
                            }
                          }
                        }
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Vehicle not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Vehicle not found"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Vehicle not found"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Vehicles"
        ],
        "summary": "Update vehicle",
        "description": "API to update vehicle information",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Vehicle ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "vehicleName": {
                    "type": "string",
                    "example": "Tesla Model 3"
                  },
                  "model": {
                    "type": "string",
                    "example": "Model 3"
                  },
                  "VIN": {
                    "type": "string",
                    "example": "1HGBH41JXMN109186"
                  },
                  "price": {
                    "type": "number",
                    "example": 50000
                  },
                  "customerId": {
                    "type": "string",
                    "example": "60f1b2b3c4e5f6g7h8i9j0k1"
                  },
                  "image": {
                    "type": "string",
                    "format": "binary",
                    "description": "Vehicle image"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Vehicles"
        ],
        "summary": "Delete vehicle",
        "description": "API to delete a vehicle",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Vehicle ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Vehicle deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Vehicle deleted successfully"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Vehicle deleted successfully"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Vehicle not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Vehicle not found"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Vehicle not found"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/vehicles/customer/{customerId}": {
      "get": {
        "tags": [
          "Vehicles"
        ],
        "summary": "Get vehicles by customer ID",
        "description": "API to get all vehicles belonging to a specific customer",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Customer ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved customer vehicles",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string",
                            "example": "string"
                          },
                          "vehicleName": {
                            "type": "string",
                            "example": "Tesla Model 3"
                          },
                          "model": {
                            "type": "string",
                            "example": "Model 3"
                          },
                          "VIN": {
                            "type": "string",
                            "example": "1HGBH41JXMN109186"
                          },
                          "price": {
                            "type": "number",
                            "example": 50000
                          },
                          "customerId": {
                            "type": "string",
                            "example": "string"
                          }
                        }
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string",
                            "example": "string"
                          },
                          "vehicleName": {
                            "type": "string",
                            "example": "Tesla Model 3"
                          },
                          "model": {
                            "type": "string",
                            "example": "Model 3"
                          },
                          "VIN": {
                            "type": "string",
                            "example": "1HGBH41JXMN109186"
                          },
                          "price": {
                            "type": "number",
                            "example": 50000
                          },
                          "customerId": {
                            "type": "string",
                            "example": "string"
                          }
                        }
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/service-packages": {
      "get": {
        "tags": [
          "Service Packages"
        ],
        "summary": "Get all service packages",
        "description": "API to get all available service packages",
        "responses": {
          "200": {
            "description": "Successfully retrieved service packages",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string",
                            "example": "string"
                          },
                          "name": {
                            "type": "string",
                            "example": "Basic Maintenance"
                          },
                          "description": {
                            "type": "string",
                            "example": "Basic maintenance package for electric vehicles"
                          },
                          "price": {
                            "type": "number",
                            "example": 100
                          },
                          "duration": {
                            "type": "number",
                            "example": 30
                          },
                          "km_interval": {
                            "type": "number",
                            "example": 10000
                          }
                        }
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string",
                            "example": "string"
                          },
                          "name": {
                            "type": "string",
                            "example": "Basic Maintenance"
                          },
                          "description": {
                            "type": "string",
                            "example": "Basic maintenance package for electric vehicles"
                          },
                          "price": {
                            "type": "number",
                            "example": 100
                          },
                          "duration": {
                            "type": "number",
                            "example": 30
                          },
                          "km_interval": {
                            "type": "number",
                            "example": 10000
                          }
                        }
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Service Packages"
        ],
        "summary": "Create new service package",
        "description": "API to create a new service package",
        "responses": {
          "201": {
            "description": "Service package created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Service package created successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "example": "string"
                        },
                        "name": {
                          "type": "string",
                          "example": "Basic Maintenance"
                        },
                        "description": {
                          "type": "string",
                          "example": "Basic maintenance package for electric vehicles"
                        },
                        "price": {
                          "type": "number",
                          "example": 100
                        },
                        "duration": {
                          "type": "number",
                          "example": 30
                        },
                        "km_interval": {
                          "type": "number",
                          "example": 10000
                        }
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Service package created successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "example": "string"
                        },
                        "name": {
                          "type": "string",
                          "example": "Basic Maintenance"
                        },
                        "description": {
                          "type": "string",
                          "example": "Basic maintenance package for electric vehicles"
                        },
                        "price": {
                          "type": "number",
                          "example": 100
                        },
                        "duration": {
                          "type": "number",
                          "example": 30
                        },
                        "km_interval": {
                          "type": "number",
                          "example": 10000
                        }
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "price",
                  "duration"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Basic Maintenance"
                  },
                  "description": {
                    "type": "string",
                    "example": "Basic maintenance package for electric vehicles"
                  },
                  "price": {
                    "type": "number",
                    "example": 100
                  },
                  "duration": {
                    "type": "number",
                    "example": 30
                  },
                  "km_interval": {
                    "type": "number",
                    "example": 10000
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/service-packages/{id}": {
      "get": {
        "tags": [
          "Service Packages"
        ],
        "summary": "Get service package by ID",
        "description": "API to get a specific service package by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Service Package ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved service package",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "example": "string"
                        },
                        "name": {
                          "type": "string",
                          "example": "Basic Maintenance"
                        },
                        "description": {
                          "type": "string",
                          "example": "Basic maintenance package for electric vehicles"
                        },
                        "price": {
                          "type": "number",
                          "example": 100
                        },
                        "duration": {
                          "type": "number",
                          "example": 30
                        },
                        "km_interval": {
                          "type": "number",
                          "example": 10000
                        }
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "example": "string"
                        },
                        "name": {
                          "type": "string",
                          "example": "Basic Maintenance"
                        },
                        "description": {
                          "type": "string",
                          "example": "Basic maintenance package for electric vehicles"
                        },
                        "price": {
                          "type": "number",
                          "example": 100
                        },
                        "duration": {
                          "type": "number",
                          "example": 30
                        },
                        "km_interval": {
                          "type": "number",
                          "example": 10000
                        }
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Service package not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Service package not found"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Service package not found"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Service Packages"
        ],
        "summary": "Update service package",
        "description": "API to update a service package",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Service Package ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Basic Maintenance"
                  },
                  "description": {
                    "type": "string",
                    "example": "Basic maintenance package for electric vehicles"
                  },
                  "price": {
                    "type": "number",
                    "example": 100
                  },
                  "duration": {
                    "type": "number",
                    "example": 30
                  },
                  "km_interval": {
                    "type": "number",
                    "example": 10000
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Service Packages"
        ],
        "summary": "Delete service package",
        "description": "API to delete a service package",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Service Package ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Service package deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Service package deleted successfully"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Service package deleted successfully"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Service package not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Service package not found"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Service package not found"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/vehicle-subscriptions": {
      "get": {
        "tags": [
          "Vehicle Subscriptions"
        ],
        "summary": "Get all vehicle subscriptions",
        "description": "API to get all vehicle maintenance subscriptions",
        "responses": {
          "200": {
            "description": "Successfully retrieved subscriptions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string",
                            "example": "string"
                          },
                          "vehicleId": {
                            "type": "object",
                            "properties": {
                              "_id": {
                                "type": "string",
                                "example": "string"
                              },
                              "vehicleName": {
                                "type": "string",
                                "example": "Tesla Model 3"
                              },
                              "model": {
                                "type": "string",
                                "example": "Model 3"
                              },
                              "VIN": {
                                "type": "string",
                                "example": "1HGBH41JXMN109186"
                              }
                            }
                          },
                          "package_id": {
                            "type": "object",
                            "properties": {
                              "_id": {
                                "type": "string",
                                "example": "string"
                              },
                              "name": {
                                "type": "string",
                                "example": "Basic Maintenance"
                              },
                              "description": {
                                "type": "string",
                                "example": "Basic maintenance package"
                              },
                              "price": {
                                "type": "number",
                                "example": 100
                              },
                              "duration": {
                                "type": "number",
                                "example": 30
                              },
                              "km_interval": {
                                "type": "number",
                                "example": 10000
                              }
                            }
                          },
                          "start_date": {
                            "type": "string",
                            "example": "2023-01-01T00:00:00.000Z"
                          },
                          "end_date": {
                            "type": "string",
                            "example": "2024-01-01T00:00:00.000Z"
                          },
                          "status": {
                            "type": "string",
                            "example": "ACTIVE"
                          }
                        }
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string",
                            "example": "string"
                          },
                          "vehicleId": {
                            "type": "object",
                            "properties": {
                              "_id": {
                                "type": "string",
                                "example": "string"
                              },
                              "vehicleName": {
                                "type": "string",
                                "example": "Tesla Model 3"
                              },
                              "model": {
                                "type": "string",
                                "example": "Model 3"
                              },
                              "VIN": {
                                "type": "string",
                                "example": "1HGBH41JXMN109186"
                              }
                            }
                          },
                          "package_id": {
                            "type": "object",
                            "properties": {
                              "_id": {
                                "type": "string",
                                "example": "string"
                              },
                              "name": {
                                "type": "string",
                                "example": "Basic Maintenance"
                              },
                              "description": {
                                "type": "string",
                                "example": "Basic maintenance package"
                              },
                              "price": {
                                "type": "number",
                                "example": 100
                              },
                              "duration": {
                                "type": "number",
                                "example": 30
                              },
                              "km_interval": {
                                "type": "number",
                                "example": 10000
                              }
                            }
                          },
                          "start_date": {
                            "type": "string",
                            "example": "2023-01-01T00:00:00.000Z"
                          },
                          "end_date": {
                            "type": "string",
                            "example": "2024-01-01T00:00:00.000Z"
                          },
                          "status": {
                            "type": "string",
                            "example": "ACTIVE"
                          }
                        }
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Vehicle Subscriptions"
        ],
        "summary": "Create new subscription",
        "description": "API to create a new vehicle maintenance subscription",
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "vehicleId": {
                    "type": "string",
                    "example": "64f1b2c3d4e5f6789abcdef0",
                    "description": "ID of the vehicle to subscribe"
                  },
                  "package_id": {
                    "type": "string",
                    "example": "64f1b2c3d4e5f6789abcdef1",
                    "description": "ID of the maintenance package"
                  },
                  "start_date": {
                    "type": "string",
                    "format": "date",
                    "example": "2023-01-01",
                    "description": "Start date of the subscription"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "ACTIVE",
                      "INACTIVE",
                      "EXPIRED",
                      "CANCELLED"
                    ],
                    "example": "ACTIVE",
                    "description": "Initial status of the subscription"
                  }
                },
                "required": [
                  "vehicleId",
                  "package_id",
                  "start_date",
                  "end_date"
                ]
              }
            }
          }
        }
      }
    },
    "/api/vehicle-subscriptions/{id}": {
      "get": {
        "tags": [
          "Vehicle Subscriptions"
        ],
        "summary": "Get subscription by ID",
        "description": "API to get a specific vehicle subscription by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Subscription ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Vehicle Subscriptions"
        ],
        "summary": "Update subscription",
        "description": "API to update a vehicle subscription",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Subscription ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "vehicleId": {
                    "type": "string",
                    "example": "64f1b2c3d4e5f6789abcdef0"
                  },
                  "package_id": {
                    "type": "string",
                    "example": "64f1b2c3d4e5f6789abcdef1"
                  },
                  "start_date": {
                    "type": "string",
                    "format": "date",
                    "example": "2023-01-01"
                  },
                  "end_date": {
                    "type": "string",
                    "format": "date",
                    "example": "2024-01-01"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "ACTIVE",
                      "INACTIVE",
                      "EXPIRED",
                      "CANCELLED"
                    ],
                    "example": "ACTIVE"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Vehicle Subscriptions"
        ],
        "summary": "Delete subscription",
        "description": "API to delete a vehicle subscription",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Subscription ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/vehicle-subscriptions/vehicle/{vehicleId}": {
      "get": {
        "tags": [
          "Vehicle Subscriptions"
        ],
        "summary": "Get subscriptions by vehicle ID",
        "description": "API to get all subscriptions for a specific vehicle",
        "parameters": [
          {
            "name": "vehicleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Vehicle ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/vehicle-subscriptions/customer/{customerId}": {
      "get": {
        "tags": [
          "Vehicle Subscriptions"
        ],
        "summary": "Get subscriptions by customer ID",
        "description": "API to get all subscriptions for a specific customer",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Customer ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/vehicle-subscriptions/{id}/status": {
      "put": {
        "tags": [
          "Vehicle Subscriptions"
        ],
        "summary": "Update subscription status",
        "description": "API to update the status of a vehicle subscription",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Subscription ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "ACTIVE",
                      "INACTIVE",
                      "EXPIRED",
                      "CANCELLED"
                    ],
                    "example": "ACTIVE",
                    "description": "The new status for the subscription"
                  }
                },
                "required": [
                  "status"
                ]
              }
            }
          }
        }
      }
    },
    "/api/vehicle-subscriptions/expiring/{days}": {
      "get": {
        "tags": [
          "Vehicle Subscriptions"
        ],
        "summary": "Get expiring subscriptions",
        "description": "API to get subscriptions that are expiring within specified days",
        "parameters": [
          {
            "name": "days",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Number of days to check for expiring subscriptions"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/vehicle-subscriptions/{id}/renew": {
      "post": {
        "tags": [
          "Vehicle Subscriptions"
        ],
        "summary": "Renew subscription",
        "description": "API to renew a vehicle subscription",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Subscription ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/vehicle-subscriptions/update-expired": {
      "put": {
        "tags": [
          "Vehicle Subscriptions"
        ],
        "summary": "Update expired subscriptions",
        "description": "API to automatically update expired subscriptions",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/alerts": {
      "get": {
        "tags": [
          "Alerts"
        ],
        "summary": "Get all alerts with filtering and pagination",
        "description": "API to get all alerts with optional filtering and pagination",
        "parameters": [
          {
            "name": "vehicleId",
            "description": "Filter by vehicle ID",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isRead",
            "description": "Filter by read status",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "type",
            "description": "Filter by alert type",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "priority",
            "description": "Filter by priority",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "Page number",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "description": "Number of items per page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Alerts retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Alerts retrieved successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "alerts": {
                          "type": "array",
                          "example": [],
                          "items": {}
                        },
                        "totalCount": {
                          "type": "number",
                          "example": 0
                        },
                        "currentPage": {
                          "type": "number",
                          "example": 1
                        },
                        "totalPages": {
                          "type": "number",
                          "example": 1
                        }
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Alerts retrieved successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "alerts": {
                          "type": "array",
                          "example": [],
                          "items": {}
                        },
                        "totalCount": {
                          "type": "number",
                          "example": 0
                        },
                        "currentPage": {
                          "type": "number",
                          "example": 1
                        },
                        "totalPages": {
                          "type": "number",
                          "example": 1
                        }
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Alerts"
        ],
        "summary": "Create a new alert",
        "description": "API to create a new alert for a vehicle",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Alert data",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "example": "Maintenance Due"
                },
                "content": {
                  "type": "string",
                  "example": "Your vehicle requires maintenance"
                },
                "vehicleId": {
                  "type": "string",
                  "example": "507f1f77bcf86cd799439011"
                },
                "type": {
                  "type": "string",
                  "example": "MAINTENANCE"
                },
                "priority": {
                  "type": "string",
                  "example": "HIGH"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Alert created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Alert created successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "example": "string"
                        },
                        "title": {
                          "type": "string",
                          "example": "Alert title"
                        },
                        "content": {
                          "type": "string",
                          "example": "Alert content"
                        },
                        "isRead": {
                          "type": "boolean",
                          "example": false
                        },
                        "vehicleId": {
                          "type": "string",
                          "example": "string"
                        },
                        "type": {
                          "type": "string",
                          "example": "SYSTEM"
                        },
                        "priority": {
                          "type": "string",
                          "example": "MEDIUM"
                        }
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Alert created successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "example": "string"
                        },
                        "title": {
                          "type": "string",
                          "example": "Alert title"
                        },
                        "content": {
                          "type": "string",
                          "example": "Alert content"
                        },
                        "isRead": {
                          "type": "boolean",
                          "example": false
                        },
                        "vehicleId": {
                          "type": "string",
                          "example": "string"
                        },
                        "type": {
                          "type": "string",
                          "example": "SYSTEM"
                        },
                        "priority": {
                          "type": "string",
                          "example": "MEDIUM"
                        }
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/alerts/{id}": {
      "get": {
        "tags": [
          "Alerts"
        ],
        "summary": "Get alert by ID",
        "description": "API to get a specific alert by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Alert ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Alert retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Alert retrieved successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "example": "string"
                        },
                        "title": {
                          "type": "string",
                          "example": "Alert title"
                        },
                        "content": {
                          "type": "string",
                          "example": "Alert content"
                        },
                        "isRead": {
                          "type": "boolean",
                          "example": false
                        },
                        "vehicleId": {
                          "type": "string",
                          "example": "string"
                        },
                        "type": {
                          "type": "string",
                          "example": "SYSTEM"
                        },
                        "priority": {
                          "type": "string",
                          "example": "MEDIUM"
                        },
                        "createdAt": {
                          "type": "string",
                          "example": "2023-01-01T00:00:00.000Z"
                        },
                        "updatedAt": {
                          "type": "string",
                          "example": "2023-01-01T00:00:00.000Z"
                        }
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Alert retrieved successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "example": "string"
                        },
                        "title": {
                          "type": "string",
                          "example": "Alert title"
                        },
                        "content": {
                          "type": "string",
                          "example": "Alert content"
                        },
                        "isRead": {
                          "type": "boolean",
                          "example": false
                        },
                        "vehicleId": {
                          "type": "string",
                          "example": "string"
                        },
                        "type": {
                          "type": "string",
                          "example": "SYSTEM"
                        },
                        "priority": {
                          "type": "string",
                          "example": "MEDIUM"
                        },
                        "createdAt": {
                          "type": "string",
                          "example": "2023-01-01T00:00:00.000Z"
                        },
                        "updatedAt": {
                          "type": "string",
                          "example": "2023-01-01T00:00:00.000Z"
                        }
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Alert not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Alert not found"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Alert not found"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Alerts"
        ],
        "summary": "Update alert",
        "description": "API to update an existing alert",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Alert ID"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Alert update data",
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "example": "Updated alert title"
                },
                "content": {
                  "type": "string",
                  "example": "Updated alert content"
                },
                "isRead": {
                  "type": "boolean",
                  "example": true
                },
                "type": {
                  "type": "string",
                  "example": "MAINTENANCE"
                },
                "priority": {
                  "type": "string",
                  "example": "HIGH"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Alert updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Alert updated successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "example": "string"
                        },
                        "title": {
                          "type": "string",
                          "example": "Updated alert title"
                        },
                        "content": {
                          "type": "string",
                          "example": "Updated alert content"
                        },
                        "isRead": {
                          "type": "boolean",
                          "example": true
                        },
                        "vehicleId": {
                          "type": "string",
                          "example": "string"
                        },
                        "type": {
                          "type": "string",
                          "example": "MAINTENANCE"
                        },
                        "priority": {
                          "type": "string",
                          "example": "HIGH"
                        }
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Alert updated successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "example": "string"
                        },
                        "title": {
                          "type": "string",
                          "example": "Updated alert title"
                        },
                        "content": {
                          "type": "string",
                          "example": "Updated alert content"
                        },
                        "isRead": {
                          "type": "boolean",
                          "example": true
                        },
                        "vehicleId": {
                          "type": "string",
                          "example": "string"
                        },
                        "type": {
                          "type": "string",
                          "example": "MAINTENANCE"
                        },
                        "priority": {
                          "type": "string",
                          "example": "HIGH"
                        }
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/alerts/{id}/read": {
      "patch": {
        "tags": [
          "Alerts"
        ],
        "summary": "Mark alert as read",
        "description": "API to mark a specific alert as read",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Alert ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Alert marked as read",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Alert marked as read"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "example": "string"
                        },
                        "title": {
                          "type": "string",
                          "example": "Alert title"
                        },
                        "content": {
                          "type": "string",
                          "example": "Alert content"
                        },
                        "isRead": {
                          "type": "boolean",
                          "example": true
                        },
                        "vehicleId": {
                          "type": "string",
                          "example": "string"
                        },
                        "type": {
                          "type": "string",
                          "example": "SYSTEM"
                        },
                        "priority": {
                          "type": "string",
                          "example": "MEDIUM"
                        }
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Alert marked as read"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "example": "string"
                        },
                        "title": {
                          "type": "string",
                          "example": "Alert title"
                        },
                        "content": {
                          "type": "string",
                          "example": "Alert content"
                        },
                        "isRead": {
                          "type": "boolean",
                          "example": true
                        },
                        "vehicleId": {
                          "type": "string",
                          "example": "string"
                        },
                        "type": {
                          "type": "string",
                          "example": "SYSTEM"
                        },
                        "priority": {
                          "type": "string",
                          "example": "MEDIUM"
                        }
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "string",
            "example": "60f1b2b3c4e5f6g7h8i9j0k1"
          },
          "email": {
            "type": "string",
            "example": "user@example.com"
          },
          "role": {
            "type": "string",
            "example": "customer"
          },
          "isDeleted": {
            "type": "boolean",
            "example": false
          },
          "created_at": {
            "type": "string",
            "example": "2025-09-21T10:00:00.000Z"
          },
          "updated_at": {
            "type": "string",
            "example": "2025-09-21T10:00:00.000Z"
          }
        },
        "xml": {
          "name": "User"
        }
      },
      "Login": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "example": "password123"
          }
        },
        "xml": {
          "name": "Login"
        }
      },
      "Register": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "example": "password123"
          },
          "role": {
            "type": "string",
            "example": "CUSTOMER"
          }
        },
        "xml": {
          "name": "Register"
        }
      },
      "UserUpdate": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "newemail@example.com"
          },
          "password": {
            "type": "string",
            "example": "newpassword123"
          },
          "role": {
            "type": "string",
            "example": "TECHNICIAN"
          },
          "isDeleted": {
            "type": "boolean",
            "example": false
          }
        },
        "xml": {
          "name": "UserUpdate"
        }
      },
      "ApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string",
            "example": "Operation completed successfully"
          },
          "data": {
            "type": "object",
            "properties": {}
          }
        },
        "xml": {
          "name": "ApiResponse"
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "message": {
            "type": "string",
            "example": "Error message description"
          }
        },
        "xml": {
          "name": "ErrorResponse"
        }
      },
      "PaginationInfo": {
        "type": "object",
        "properties": {
          "current_page": {
            "type": "number",
            "example": 1
          },
          "total_pages": {
            "type": "number",
            "example": 5
          },
          "total_count": {
            "type": "number",
            "example": 23
          },
          "per_page": {
            "type": "number",
            "example": 10
          }
        },
        "xml": {
          "name": "PaginationInfo"
        }
      },
      "UsersListResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string",
            "example": "Users retrieved successfully"
          },
          "data": {
            "type": "array",
            "items": {
              "xml": {
                "name": "user"
              },
              "$ref": "#/components/schemas/User"
            }
          },
          "pagination": {
            "xml": {
              "name": "paginationinfo"
            },
            "$ref": "#/components/schemas/PaginationInfo"
          }
        },
        "xml": {
          "name": "UsersListResponse"
        }
      },
      "Customer": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "60f1b2b3c4e5f6g7h8i9j0k1"
          },
          "userId": {
            "type": "string",
            "example": "60f1b2b3c4e5f6g7h8i9j0k2"
          },
          "customerName": {
            "type": "string",
            "example": "John Doe"
          },
          "dateOfBirth": {
            "type": "string",
            "example": "1990-01-15"
          },
          "phone": {
            "type": "string",
            "example": "+1234567890"
          },
          "address": {
            "type": "string",
            "example": "123 Main St, City, State 12345"
          },
          "createdAt": {
            "type": "string",
            "example": "2025-09-21T10:00:00.000Z"
          },
          "updatedAt": {
            "type": "string",
            "example": "2025-09-21T10:00:00.000Z"
          }
        },
        "xml": {
          "name": "Customer"
        }
      },
      "CreateCustomer": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "example": "507f1f77bcf86cd799439011"
          },
          "customerName": {
            "type": "string",
            "example": "John Doe"
          },
          "dateOfBirth": {
            "type": "string",
            "example": "1990-01-15"
          },
          "phone": {
            "type": "string",
            "example": "+1234567890"
          },
          "address": {
            "type": "string",
            "example": "123 Main St, City, State"
          }
        },
        "xml": {
          "name": "CreateCustomer"
        }
      },
      "UpdateCustomer": {
        "type": "object",
        "properties": {
          "customerName": {
            "type": "string",
            "example": "John Doe"
          },
          "dateOfBirth": {
            "type": "string",
            "example": "1990-01-15"
          },
          "phone": {
            "type": "string",
            "example": "+1234567890"
          },
          "address": {
            "type": "string",
            "example": "123 Main St, City, State"
          }
        },
        "xml": {
          "name": "UpdateCustomer"
        }
      },
      "UpdateSystemUser": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "dateOfBirth": {
            "type": "string",
            "example": "1990-01-15"
          },
          "phone": {
            "type": "string",
            "example": "+1234567890"
          },
          "certification": {
            "type": "string",
            "example": "string"
          }
        },
        "xml": {
          "name": "UpdateSystemUser"
        }
      },
      "SystemUser": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "60f1b2b3c4e5f6g7h8i9j0k1"
          },
          "userId": {
            "type": "string",
            "example": "60f1b2b3c4e5f6g7h8i9j0k2"
          },
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "dateOfBirth": {
            "type": "string",
            "example": "1990-01-15"
          },
          "phone": {
            "type": "string",
            "example": "+1234567890"
          },
          "certificate": {
            "type": "string",
            "example": "string"
          },
          "createdAt": {
            "type": "string",
            "example": "2025-09-21T10:00:00.000Z"
          },
          "updatedAt": {
            "type": "string",
            "example": "2025-09-21T10:00:00.000Z"
          }
        },
        "xml": {
          "name": "SystemUser"
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "description": "Enter your JWT Bearer token here"
      }
    }
  }
}